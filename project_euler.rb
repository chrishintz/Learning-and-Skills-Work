# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

def sum(num)
  sum = 0
  (0...num).each do |i|
    if i % 3 == 0 || i % 5 == 0
      sum += i
    else
    end
  end
  sum
end

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fib(n)
    evens = 0
    x1    = 0
    x2    = 1
    while (x1 < n) do
    x1, x2 = x2, x1+x2
        if x2 % 2 == 0 then
            evens += x2
        end
    end
    puts evens
end

# The prime factors of 13195 are 5, 7, 13 and 29.

# What is the largest prime factor of the number 600851475143 ?

def large_prime(n)
  factors = []
  (1..n).each do |i|
    if n % i == 0
      factors << i
    else
    end
  end
  factors
end
